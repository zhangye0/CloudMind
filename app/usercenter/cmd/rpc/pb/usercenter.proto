syntax = "proto3";

option go_package = "./pb";

package pb;

message User {
  int64 id = 1;
  string email = 2;
  string nickname =3;
  int64  sex = 4;
  string avatar = 5;
  string Name = 6;
  string IdCard = 7;
  int64 Create_time = 8;
  int64 Update_time = 9;
  double Memory = 10;
  double Flow = 11;
  double Money = 12;
}

message UserAuth {
  int64  id = 1;
  int64  userId = 2;
  string authType = 3;
  string authKey = 4;
}


//req „ÄÅresp
message RegisterReq {
  string NickName  = 1;
  string PassWord  = 2;
  string Email     = 3;
  string Code      = 4;
  UserAuth userAuth = 5;
  string Error = 6;
}

message RegisterResp {
  string AccessToken = 1;
  int64  AccessExpire = 2;
  int64  RefreshAfter = 3;
  string Error = 4;
}

message LoginReq {
  string  authType = 1;
  string authKey = 2;
  string  password = 3;
}
message LoginResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
  string Error = 4;
}

message GetUserAuthByAuthKeyReq {
  string  authKey = 1;
  string  authType = 2;
}
message GetUserAuthByAuthKeyResp {
  UserAuth userAuth = 1;
  string Error = 2;
}

message GetUserAuthByUserIdReq {
  int64  userId = 1;
  string  authType = 2;
}
message GetUserAuthyUserIdResp {
  UserAuth userAuth = 1;
  string Error = 2;
}

message GenerateTokenReq {
  int64 userId = 1;
}
message GenerateTokenResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
  string Error = 4;
}

message SendEmailReq {
   string Email = 1;
}

message SendEmailResp {
  string Error = 2;
}

message GetUserInfoReq {
  int64 UserId = 1;
}

message GetUserInfoResp {
  User UserInfo = 1;
  string Error = 2;
}

message UpdateUserInfoReq {
  int64 UserId = 1;
  string UpdateType = 2;
  string Field1 = 3;
  string Filed2 = 4;
  int64 Filed3 = 5;
  double Filed4 = 6;
}

message UpdateUserInfoResp {
  string Error = 1;
}

message RealNameAuthenticationReq {

}

message RealNameAuthenticationResp {
  string Error = 1;
}

message LogoutReq {
  int64 UserId = 1;
}

message LogoutResp {
  string Error = 1;
}

//service
service usercenter {
  rpc Register (RegisterReq) returns (RegisterResp);
  rpc Login (LoginReq) returns (LoginResp);
  rpc SendEmail (SendEmailReq) returns (SendEmailResp);
  rpc getUserAuthByAuthKey(GetUserAuthByAuthKeyReq) returns(GetUserAuthByAuthKeyResp);
  rpc getUserAuthByUserId(GetUserAuthByUserIdReq) returns(GetUserAuthyUserIdResp);
  rpc generateToken(GenerateTokenReq) returns(GenerateTokenResp);
  rpc GetUserInfo(GetUserInfoReq) returns(GetUserInfoResp);
  rpc UpdateUserInfo(UpdateUserInfoReq) returns(UpdateUserInfoResp);
  rpc RealNameAuthentication(RealNameAuthenticationReq) returns(RealNameAuthenticationResp);
  rpc Logout(LogoutReq) returns(LogoutResp);
}
