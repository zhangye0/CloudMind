// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	login "CloudMind/app/usercenter/cmd/api/internal/handler/login"
	user "CloudMind/app/usercenter/cmd/api/internal/handler/user"
	"CloudMind/app/usercenter/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login/Register",
				Handler: login.RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login/EmailLogin",
				Handler: login.EmailLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login/QqLogin",
				Handler: login.QqloginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login/WxLogin",
				Handler: login.WxloginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login/SendEmail",
				Handler: login.SendEmailHandler(serverCtx),
			},
		},
		rest.WithPrefix("/usercenter/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/user/GetUserInfo",
				Handler: user.GetUserInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/UpdateNickName",
				Handler: user.UpdateNickNameHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/UpdatePassWord",
				Handler: user.UpdatePassWordHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/UpdateSex",
				Handler: user.UpdateSexHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/UpdateAvatar",
				Handler: user.UpdateAvatarHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/UpdateMemory",
				Handler: user.UpdateMemoryHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/UpdateFlow",
				Handler: user.UpdateFlowHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/UpdateMoney",
				Handler: user.UpdateMoneyHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/UpdateStar",
				Handler: user.UpdateStarHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/RealNameAuthentication",
				Handler: user.RealNameAuthenticationHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/usercenter/v1"),
	)
}
