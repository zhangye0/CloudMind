// Code generated by goctl. DO NOT EDIT.
// Source: es.proto

package es

import (
	"context"

	"CloudMind/app/es/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	File                       = pb.File
	InsertFileReq              = pb.InsertFileReq
	InsertFileResp             = pb.InsertFileResp
	InsertPostReq              = pb.InsertPostReq
	InsertPostResp             = pb.InsertPostResp
	Post                       = pb.Post
	SearchForFileRankReq       = pb.SearchForFileRankReq
	SearchForFileRankResp      = pb.SearchForFileRankResp
	SearchForFilesByUserIdReq  = pb.SearchForFilesByUserIdReq
	SearchForFilesByUserIdResp = pb.SearchForFilesByUserIdResp
	SearchForFilesReq          = pb.SearchForFilesReq
	SearchForFilesResp         = pb.SearchForFilesResp
	SearchForPostsByUserIdReq  = pb.SearchForPostsByUserIdReq
	SearchForPostsByUserIdResp = pb.SearchForPostsByUserIdResp
	SearchForPostsRankReq      = pb.SearchForPostsRankReq
	SearchForPostsRankResp     = pb.SearchForPostsRankResp
	SearchForPostsReq          = pb.SearchForPostsReq
	SearchForPostsResp         = pb.SearchForPostsResp
	UpdateFilesReq             = pb.UpdateFilesReq
	UpdateFilesResp            = pb.UpdateFilesResp
	UpdatePostsReq             = pb.UpdatePostsReq
	UpdatePostsResp            = pb.UpdatePostsResp

	Es interface {
		SearchForFiles(ctx context.Context, in *SearchForFilesReq, opts ...grpc.CallOption) (*SearchForFilesResp, error)
		SearchForPosts(ctx context.Context, in *SearchForPostsReq, opts ...grpc.CallOption) (*SearchForPostsResp, error)
		SearchForFileRank(ctx context.Context, in *SearchForFileRankReq, opts ...grpc.CallOption) (*SearchForFileRankResp, error)
		SearchForPostsRank(ctx context.Context, in *SearchForPostsRankReq, opts ...grpc.CallOption) (*SearchForPostsRankResp, error)
		SearchForFilesByUserId(ctx context.Context, in *SearchForFilesByUserIdReq, opts ...grpc.CallOption) (*SearchForFilesByUserIdResp, error)
		SearchForPostsByUserId(ctx context.Context, in *SearchForPostsByUserIdReq, opts ...grpc.CallOption) (*SearchForPostsByUserIdResp, error)
		UpdateFiles(ctx context.Context, in *UpdateFilesReq, opts ...grpc.CallOption) (*UpdateFilesResp, error)
		UpdatePosts(ctx context.Context, in *UpdatePostsReq, opts ...grpc.CallOption) (*UpdatePostsResp, error)
		InsertFile(ctx context.Context, in *InsertFileReq, opts ...grpc.CallOption) (*InsertFileResp, error)
		InsertPost(ctx context.Context, in *InsertPostReq, opts ...grpc.CallOption) (*InsertPostResp, error)
	}

	defaultEs struct {
		cli zrpc.Client
	}
)

func NewEs(cli zrpc.Client) Es {
	return &defaultEs{
		cli: cli,
	}
}

func (m *defaultEs) SearchForFiles(ctx context.Context, in *SearchForFilesReq, opts ...grpc.CallOption) (*SearchForFilesResp, error) {
	client := pb.NewEsClient(m.cli.Conn())
	return client.SearchForFiles(ctx, in, opts...)
}

func (m *defaultEs) SearchForPosts(ctx context.Context, in *SearchForPostsReq, opts ...grpc.CallOption) (*SearchForPostsResp, error) {
	client := pb.NewEsClient(m.cli.Conn())
	return client.SearchForPosts(ctx, in, opts...)
}

func (m *defaultEs) SearchForFileRank(ctx context.Context, in *SearchForFileRankReq, opts ...grpc.CallOption) (*SearchForFileRankResp, error) {
	client := pb.NewEsClient(m.cli.Conn())
	return client.SearchForFileRank(ctx, in, opts...)
}

func (m *defaultEs) SearchForPostsRank(ctx context.Context, in *SearchForPostsRankReq, opts ...grpc.CallOption) (*SearchForPostsRankResp, error) {
	client := pb.NewEsClient(m.cli.Conn())
	return client.SearchForPostsRank(ctx, in, opts...)
}

func (m *defaultEs) SearchForFilesByUserId(ctx context.Context, in *SearchForFilesByUserIdReq, opts ...grpc.CallOption) (*SearchForFilesByUserIdResp, error) {
	client := pb.NewEsClient(m.cli.Conn())
	return client.SearchForFilesByUserId(ctx, in, opts...)
}

func (m *defaultEs) SearchForPostsByUserId(ctx context.Context, in *SearchForPostsByUserIdReq, opts ...grpc.CallOption) (*SearchForPostsByUserIdResp, error) {
	client := pb.NewEsClient(m.cli.Conn())
	return client.SearchForPostsByUserId(ctx, in, opts...)
}

func (m *defaultEs) UpdateFiles(ctx context.Context, in *UpdateFilesReq, opts ...grpc.CallOption) (*UpdateFilesResp, error) {
	client := pb.NewEsClient(m.cli.Conn())
	return client.UpdateFiles(ctx, in, opts...)
}

func (m *defaultEs) UpdatePosts(ctx context.Context, in *UpdatePostsReq, opts ...grpc.CallOption) (*UpdatePostsResp, error) {
	client := pb.NewEsClient(m.cli.Conn())
	return client.UpdatePosts(ctx, in, opts...)
}

func (m *defaultEs) InsertFile(ctx context.Context, in *InsertFileReq, opts ...grpc.CallOption) (*InsertFileResp, error) {
	client := pb.NewEsClient(m.cli.Conn())
	return client.InsertFile(ctx, in, opts...)
}

func (m *defaultEs) InsertPost(ctx context.Context, in *InsertPostReq, opts ...grpc.CallOption) (*InsertPostResp, error) {
	client := pb.NewEsClient(m.cli.Conn())
	return client.InsertPost(ctx, in, opts...)
}
